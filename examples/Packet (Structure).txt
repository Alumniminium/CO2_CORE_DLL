using System;
using System.Runtime.InteropServices;
using CO2_CORE_DLL;
using CO2_CORE_DLL.Network;

namespace COServer
{
    public unsafe class MsgAction : Msg
    {
        public const Int32 TYPE = 1010;

        [StructLayout(LayoutKind.Sequential, Pack = 1)]
        public struct MsgInfo
        {
            public MsgHeader Header;
            public Int32 Timestamp;
            public Int32 UniqId;
            public Int32 Param;
            public UInt16 X;
            public UInt16 Y;
            public UInt16 Direction;
            public Int16 Action;
        };

        private MsgInfo* pInfo = null;

        public MsgAction(Int32 UniqId, Int32 Param, Int16 Action)
            : base(sizeof(MsgInfo))
        {
            pInfo = (MsgInfo*)((Byte*)((Msg)this));

            pInfo->Header.Length = (Int16)GetLength();
            pInfo->Header.Type = MsgAction.TYPE;

            pInfo->Timestamp = Environment.TickCount;
            pInfo->Param = Param;
        }

        public static implicit operator Byte[](MsgAction Packet) { return (Msg)Packet; }
        public static implicit operator Byte*(MsgAction Packet) { return (Msg)Packet; }
    }
}